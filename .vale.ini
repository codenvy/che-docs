# Vale configuration file for che-docs repository
# See: https://docs.errata.ai/vale/config

# The relative path to the folder containing linting rules (styles)
StylesPath = .vale/styles

# Vocab define the exceptions to use in *all* `BasedOnStyles`.
# accept.txt -> Vale.Terms
# reject.txt -> Vale.Avoid
# See: https://docs.errata.ai/vale/vocab
Vocab = Che

# Minimum alert level
# -------------------
# The minimum alert level to display (suggestion, warning, or error).
# If integrated into CI, builds fail by default on error-level alerts,
# unless you execute Vale with the --no-exit flag
MinAlertLevel = suggestion

# IgnoredScopes specifies inline-level HTML tags to ignore. In other words, these tags may occur in an active scope (unlike SkippedScopes, which are skipped entirely) but their content still won't raise any alerts.
# By default, `code` and `tt` are ignored.
IgnoredScopes = code, tt, img, url, a, body.id
# SkippedScopes specifies block-level HTML tags to ignore. Any content in these scopes will be ignored.
# By default, `script`, `style`, `pre`, and `figure` are ignored.
# For asciidoc: by default, listing blocks and inline literals are ignored.
SkippedScopes = script, style, pre, figure, code, tt, blockquote, listingblock, literalblock

# Associate an unknown file extension with a supported file format
[formats]

# To check the comments starting by a dash `#` in the `che.properties` file in `che` repository, associate the `*.properties` files to the `r` format.
properties = r

[*.{properties,r}]

# Ignore every line that doesn't start with a dash
; BlockIgnores = ([^\#] .*)

; TokenIgnores = (\x60+[^\n$]+\x60+)

# What file types should Vale test?
# ----------------------------------
[*.{adoc,properties,r,yaml}]

# Styles to load
# --------------
# What styles, located in the StylesPath folder, should Vale load?
BasedOnStyles = CheDocs,IBM,Vale

# BlockIgnores allow you to exclude certain block-level sections of text that don't have an associated HTML tag that could be used with SkippedScopes.
; BlockIgnores = ([^\#] .*)

# TokenIgnores allow you to exclude certain inline-level sections of text that don't have an associated HTML tag that could be used with IgnoredScopes. 
; TokenIgnores = (\x60+[^\n$]+?\x60+)

# Enabling rules
Vale.Spelling = YES

# Disabling rules
Vale.Repetition = NO

# Altering rules severity (error, warning, suggestion)
IBM.Annotations = suggestion
IBM.Slash = warning
IBM.Usage = suggestion
